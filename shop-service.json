{
  "openapi": "3.0.2",
  "info": {
    "title": "shop-service",
    "version": "0.0.1",
    "description": ""
  },
  "apis": [
    "/Users/hnd/Projects/saaspiens/nestjs-shop-service/src/modules/**/**.swagger.yaml",
    "/Users/hnd/Projects/saaspiens/nestjs-shop-service/src/modules/slug.swagger.yaml"
  ],
  "paths": {
    "shop/v1/sales-order/{id}": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Get sales order by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          },
          {
            "$ref": "#/components/parameters/accessToken"
          },
          {
            "$ref": "#/components/parameters/tenantCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Sales order by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "description": "Show result code (0: success, others: error)"
                    },
                    "data": {
                      "$ref": "#/components/schemas/salesOrderGetById"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Update sales-order by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          },
          {
            "$ref": "#/components/parameters/accessToken"
          },
          {
            "$ref": "#/components/parameters/tenantCode"
          }
        ],
        "requestBody": {
          "description": "sales-order request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/salesOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sales-order responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "description": "Show result code (0: success, others: error)"
                    },
                    "data": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "shop/v1/sales-order/summary": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Get sales order summary",
        "parameters": [
          {
            "in": "query",
            "name": "salesChannelCode",
            "schema": {
              "type": "string",
              "example": "TELESALE"
            }
          },
          {
            "in": "query",
            "name": "salesmanCode",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "$ref": "#/components/parameters/accessToken"
          },
          {
            "$ref": "#/components/parameters/tenantCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Summary sales order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "description": "Show result code (0: success, others: error)"
                    },
                    "data": {
                      "$ref": "#/components/schemas/summary-response"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "shop/v1/sales-order": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Get sales orders with pagination",
        "parameters": [
          {
            "in": "query",
            "name": "pageIndex",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true,
            "description": "The current page"
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "example": 10
            },
            "required": true,
            "description": "The total items that server returns"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "example": "Draft"
            },
            "required": false,
            "description": "Search by the status of sales order"
          },
          {
            "in": "query",
            "name": "searchText",
            "schema": {
              "type": "string",
              "example": "SO20227219"
            },
            "required": false,
            "description": "Search either by code or customer name"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-07-10"
            },
            "required": false,
            "description": "Search by create dated greater than or equal to fromDate"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-07-03"
            },
            "required": false,
            "description": "Search by create date less than or equal to toDate"
          },
          {
            "$ref": "#/components/parameters/accessToken"
          },
          {
            "$ref": "#/components/parameters/tenantCode"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of sales orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "description": "Show result code (0: success, others: error)"
                    },
                    "data": {
                      "$ref": "#/components/schemas/pagingResult"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Creates a new sales-order",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessToken"
          },
          {
            "$ref": "#/components/parameters/tenantCode"
          }
        ],
        "requestBody": {
          "description": "sales-order request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/salesOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sales-order responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "description": "Show result code (0: success, others: error)"
                    },
                    "data": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "shop/v1/sales-order/{id}/new": {
      "put": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Update status new by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          },
          {
            "$ref": "#/components/parameters/accessToken"
          },
          {
            "$ref": "#/components/parameters/tenantCode"
          }
        ],
        "responses": {
          "200": {
            "description": "sales-order responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "description": "Show result code (0: success, others: error)"
                    },
                    "data": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "shop/v1/sales-order/{id}/confirmed": {
      "put": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Update status confirmed by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          },
          {
            "$ref": "#/components/parameters/accessToken"
          },
          {
            "$ref": "#/components/parameters/tenantCode"
          }
        ],
        "responses": {
          "200": {
            "description": "sales-order responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "description": "Show result code (0: success, others: error)"
                    },
                    "data": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "shop/v1/sales-order/{id}/order-preparation": {
      "put": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Update status order-preparation by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          },
          {
            "$ref": "#/components/parameters/accessToken"
          },
          {
            "$ref": "#/components/parameters/tenantCode"
          }
        ],
        "responses": {
          "200": {
            "description": "sales-order responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "description": "Show result code (0: success, others: error)"
                    },
                    "data": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "shop/v1/sales-order/{id}/waiting-delivery": {
      "put": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Update status waiting-delivery by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          },
          {
            "$ref": "#/components/parameters/accessToken"
          },
          {
            "$ref": "#/components/parameters/tenantCode"
          }
        ],
        "responses": {
          "200": {
            "description": "sales-order responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "description": "Show result code (0: success, others: error)"
                    },
                    "data": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "shop/v1/sales-order/{id}/delivered": {
      "put": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Update status delivered by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          },
          {
            "$ref": "#/components/parameters/accessToken"
          },
          {
            "$ref": "#/components/parameters/tenantCode"
          }
        ],
        "responses": {
          "200": {
            "description": "sales-order responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "description": "Show result code (0: success, others: error)"
                    },
                    "data": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "shop/v1/sales-order/{id}/canceled": {
      "put": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Update status canceled by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          },
          {
            "$ref": "#/components/parameters/accessToken"
          },
          {
            "$ref": "#/components/parameters/tenantCode"
          }
        ],
        "responses": {
          "200": {
            "description": "sales-order responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "description": "Show result code (0: success, others: error)"
                    },
                    "data": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "shop/v1/sales-order/{id}/returned": {
      "put": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Update status returned by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          },
          {
            "$ref": "#/components/parameters/accessToken"
          },
          {
            "$ref": "#/components/parameters/tenantCode"
          }
        ],
        "responses": {
          "200": {
            "description": "sales-order responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "description": "Show result code (0: success, others: error)"
                    },
                    "data": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "summary-response": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "example": 100
          },
          "countStatus": {
            "type": "array",
            "items": {
              "status": {
                "type": "string",
                "example": "Draft"
              },
              "count": {
                "type": "integer",
                "example": 10
              }
            }
          }
        }
      },
      "salesOrderStatus": {
        "type": "string",
        "enum": [
          "Draft",
          "New",
          "Confirmed",
          "OrderPreparation",
          "WaitingDelivery",
          "Delivered",
          "Canceled",
          "Returned"
        ]
      },
      "pagingResult": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "example": 1
          },
          "pageSize": {
            "type": "integer",
            "example": 10
          },
          "totalRow": {
            "type": "integer",
            "example": 10,
            "description": "Count the number of sales orders by filter"
          },
          "dataSource": {
            "type": "array",
            "description": "Result",
            "items": {
              "$ref": "#/components/schemas/salesOrderGet"
            }
          }
        }
      },
      "salesOrderGet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "code": {
            "type": "string",
            "example": "SO20227219"
          },
          "status": {
            "$ref": "#/components/schemas/salesOrderStatus"
          },
          "postingDate": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "contactPerson": {
            "type": "string"
          },
          "contactPhone": {
            "type": "string",
            "example": "0901234567"
          },
          "shipAddress": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "nullable": true,
            "description": "If null, order did not originate from this server"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true,
            "example": "0901234567"
          },
          "salesChannelCode": {
            "type": "string",
            "example": "TELESALE"
          },
          "salesChannelName": {
            "type": "string",
            "example": "Telesale"
          },
          "salesmanCode": {
            "type": "number",
            "example": 1
          },
          "salesmanName": {
            "type": "string",
            "example": "Nguyễn Thị Loan"
          },
          "deliveryPartner": {
            "type": "string",
            "nullable": true,
            "example": "GHTK"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalAmount": {
            "type": "number",
            "description": "Sum of line total, promotion, shipping fee, commission, etc..."
          }
        }
      },
      "salesOrderGetById": {
        "allOf": [
          {
            "$ref": "#/components/schemas/salesOrderGet"
          },
          {
            "type": "object",
            "properties": {
              "paymentMethodId": {
                "type": "integer"
              },
              "paymentMethodName": {
                "type": "string",
                "nullable": true,
                "example": "Cash"
              },
              "note": {
                "type": "string",
                "nullable": true
              },
              "orderDiscountAmount": {
                "type": "number",
                "description": "Subtract directly on order"
              },
              "totalBeforeDiscount": {
                "type": "number",
                "description": "Sum only lines"
              },
              "totalLineDiscount": {
                "type": "number",
                "description": "Sum only lines' discount amount"
              },
              "items": {
                "type": "array",
                "description": "Order lines",
                "items": {
                  "$ref": "#/components/schemas/salesOrderGetByIdItem"
                }
              }
            }
          }
        ]
      },
      "salesOrderGetByIdItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "itemId": {
            "type": "integer"
          },
          "itemName": {
            "type": "string"
          },
          "uomId": {
            "type": "integer"
          },
          "uomName": {
            "type": "string"
          },
          "unitPrice": {
            "type": "number",
            "description": "Price per 1 item"
          },
          "quantity": {
            "type": "number"
          },
          "lineTotal": {
            "type": "number",
            "description": "unitPrice * quantity"
          },
          "priceListDetails": {
            "type": "array",
            "description": "For displaying various unit and price for Frontend",
            "items": {
              "$ref": "#/components/schemas/salesOrderGetByIdPriceListDetail"
            }
          }
        }
      },
      "salesOrderGetByIdPriceListDetail": {
        "type": "object",
        "properties": {
          "uomId": {
            "type": "integer"
          },
          "uomName": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "nullable": true
          },
          "maxPrice": {
            "type": "number",
            "nullable": true
          },
          "promotionPrice": {
            "type": "number",
            "nullable": true
          },
          "commissionPercent": {
            "type": "number",
            "nullable": true,
            "description": "For calculation commission"
          }
        }
      },
      "salesOrderItem": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer"
          },
          "uomId": {
            "type": "integer"
          },
          "unitPrice": {
            "type": "number"
          },
          "quantity": {
            "type": "integer"
          }
        }
      },
      "salesOrder": {
        "type": "object",
        "properties": {
          "salesmanCode": {
            "type": "number"
          },
          "salesmanName": {
            "type": "string"
          },
          "contactPerson": {
            "type": "string"
          },
          "contactNumber": {
            "type": "string"
          },
          "shipAddress": {
            "type": "string"
          },
          "salesChannel": {
            "type": "string"
          },
          "deliveryPartner": {
            "type": "string"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "postingDate": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "integer",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "integer"
          },
          "shippingFee": {
            "type": "number"
          },
          "orderDiscountAmount": {
            "type": "number"
          },
          "salesChannelCode": {
            "type": "string"
          },
          "salesChannelName": {
            "type": "string"
          },
          "paymentMethodName": {
            "type": "string"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "commission": {
            "type": "number",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/salesOrderItem"
            }
          }
        }
      }
    },
    "parameters": {
      "accessToken": {
        "in": "header",
        "name": "accessToken",
        "schema": {
          "type": "string"
        },
        "required": false,
        "description": "Access token of user"
      },
      "tenantCode": {
        "in": "header",
        "name": "tenantCode",
        "schema": {
          "type": "string"
        },
        "required": true,
        "description": "Tenant code of company"
      }
    }
  },
  "tags": [
    {
      "name": "SalesOrder",
      "description": "API for Sales Order",
      "x-displayName": "Sales Order"
    }
  ]
}